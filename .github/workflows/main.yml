name: ðŸš€ Webpack CI/CD

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "devel" branch
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a few job
  lint:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - uses: actions/checkout@v4

      - name: ðŸ“¥ Install dependencies
        run: npm ci

      - name: Linting Typescript
        run: npm run lint:ts

      - name: Linting SCSS
        run: npm run lint:scss

  unit-tests:
    needs: [lint]
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x]
        shard: [1, 2, 3]

    steps:
      - uses: actions/checkout@v4

      - name: âŽ” Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: npm
          cache-dependency-path: '**/package-lock.json'

      - name: ðŸ“¥ Install dependencies
        run: npm ci

      - name: Run Unit tests
        run: npm run test:unit -- --max-workers=2 -passWithNoTests --shard=${{ matrix.shard }}/${{ strategy.job-total }}

  changed-files:
    needs: [unit-tests]
    runs-on: ubuntu-latest
    outputs:
      all_changed_files: ${{ steps.changed-files.outputs.all_changed_files }}
      any_changed: ${{ steps.changed-files.outputs.any_changed }}

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v44
        with:
          files: app/**

  ui-tests:
    needs: [changed-files]
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x]

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: âŽ” Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: npm
          cache-dependency-path: '**/package-lock.json'

      - name: ðŸ“¥ Install dependencies
        run: npm ci

      - name: âš¡ Run chromatic UI tests
        if: ${{ needs.changed-files.outputs.any_changed == 'true' }}
        uses: chromaui/action@latest
        with:
          projectToken: ${{ secrets.CHROMATIC_PROJECT_TOKEN }}
          exitZeroOnChanges: true
          onlyChanged: true

  build:
    needs: [ui-tests]
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x]

    steps:
      - uses: actions/checkout@v4

      - name: âŽ” Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: npm
          cache-dependency-path: '**/package-lock.json'

      - name: ðŸ“¥ Install dependencies
        run: npm ci

      - name: Build production
        run: npm run build:prod
